{"ast":null,"code":"import _defineProperty from \"/Users/michaeldoho/Documents/Dev/capstone2.0/Front-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/michaeldoho/Documents/Dev/capstone2.0/Front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/michaeldoho/Documents/Dev/capstone2.0/Front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/michaeldoho/Documents/Dev/capstone2.0/Front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/michaeldoho/Documents/Dev/capstone2.0/Front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/michaeldoho/Documents/Dev/capstone2.0/Front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/michaeldoho/Documents/Dev/capstone2.0/Front-end/src/Assets/Javascript/Page.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../Styles/Page.scss';\n\nvar Page =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Page, _Component);\n\n  function Page() {\n    var _this;\n\n    _classCallCheck(this, Page);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Page).call(this));\n\n    _this.fetchWords = function () {\n      console.log('fetched');\n      fetch(\"http://localhost:8080/page\").then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        _this.setState({\n          words: data\n        });\n      }).catch(function (err) {\n        console.error(err);\n      });\n      console.log(_this.state.words);\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        input: e.target.value\n      });\n    };\n\n    _this.clearInput = function () {\n      _this.setState({\n        input: ''\n      });\n    };\n\n    _this.handlekey = function (e) {\n      e.preventDefault();\n      var inputWord = _this.input.current.value;\n\n      var newArray = _this.state.words.filter(function (e) {\n        return e !== inputWord;\n      });\n\n      _this.setState({\n        words: newArray\n      });\n\n      _this.clearInput();\n\n      if (_this.state.words.indexOf(inputWord) > -1) {\n        _this.setState({\n          score: _this.state.score + 1\n        });\n      }\n    };\n\n    _this.doIntervalChange = function () {\n      _this.interval = setInterval(function () {\n        if (_this.state.count > 0) {\n          _this.setState(function (prevState) {\n            return {\n              count: prevState.count - 1\n            };\n          });\n        } else {\n          clearInterval(_this.interval);\n          alert('GAME OVER' + '                                                                            ' + 'SCORE:' + _this.state.score);\n        }\n      }, 1000);\n    };\n\n    _this.input = React.createRef();\n    _this.state = {\n      words: [],\n      input: '',\n      score: 0,\n      count: 1000000000000000000000\n    };\n    console.log(_this.state.words);\n    return _this;\n  }\n\n  _createClass(Page, [{\n    key: \"componentDidMount\",\n    //fetch call\n    value: function componentDidMount() {\n      this.fetchWords();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        count: this.state.count\n      });\n      this.doIntervalChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _React$createElement;\n\n      fetchWords();\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.words.map(function (item) {\n        return React.createElement(\"h1\", {\n          className: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, item);\n      }), React.createElement(\"div\", {\n        className: \"score\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Score:\", this.state.score), React.createElement(\"div\", {\n        className: \"timer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Timer:\", this.state.count), React.createElement(\"form\", {\n        className: \"search\",\n        onSubmit: function onSubmit(event) {\n          return _this2.handlekey(event);\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"input\", (_React$createElement = {\n        className: \"textBar\",\n        type: \"reset\"\n      }, _defineProperty(_React$createElement, \"type\", \"text\"), _defineProperty(_React$createElement, \"ref\", this.input), _defineProperty(_React$createElement, \"value\", this.state.input), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement))), React.createElement(Link, {\n        to: '/start',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"retry\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Try again\")), React.createElement(\"div\", {\n        className: \"back\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Page;\n}(Component);\n\nexport { Page as default };","map":{"version":3,"sources":["/Users/michaeldoho/Documents/Dev/capstone2.0/Front-end/src/Assets/Javascript/Page.js"],"names":["React","Component","Link","Page","fetchWords","console","log","fetch","then","response","json","data","setState","words","catch","err","error","state","handleChange","e","input","target","value","clearInput","handlekey","preventDefault","inputWord","current","newArray","filter","indexOf","score","doIntervalChange","interval","setInterval","count","prevState","clearInterval","alert","createRef","map","item","event"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,qBAAP;;IACqBC,I;;;;;AACjB,kBAAa;AAAA;;AAAA;;AACT;;AADS,UAmBbC,UAnBa,GAmBA,YAAM;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEAC,MAAAA,KAAK,CAAC,4BAAD,CAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADd,EAECF,IAFD,CAEM,UAAAG,IAAI,EAAG;AACT,cAAKC,QAAL,CAAc;AACVC,UAAAA,KAAK,EAAEF;AADG,SAAd;AAGH,OAND,EAOCG,KAPD,CAOO,UAAAC,GAAG,EAAI;AACVV,QAAAA,OAAO,CAACW,KAAR,CAAcD,GAAd;AACH,OATD;AAUAV,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKW,KAAL,CAAWJ,KAAvB;AACH,KAjCY;;AAAA,UAmCbK,YAnCa,GAmCE,UAACC,CAAD,EAAM;AACjB,YAAKP,QAAL,CAAc;AACVQ,QAAAA,KAAK,EAACD,CAAC,CAACE,MAAF,CAASC;AADL,OAAd;AAGH,KAvCY;;AAAA,UAwCbC,UAxCa,GAwCD,YAAM;AACd,YAAKX,QAAL,CAAc;AACVQ,QAAAA,KAAK,EAAC;AADI,OAAd;AAGH,KA5CY;;AAAA,UA6CbI,SA7Ca,GA6CD,UAACL,CAAD,EAAO;AACfA,MAAAA,CAAC,CAACM,cAAF;AACA,UAAIC,SAAS,GAAG,MAAKN,KAAL,CAAWO,OAAX,CAAmBL,KAAnC;;AACA,UAAIM,QAAQ,GAAG,MAAKX,KAAL,CAAWJ,KAAX,CAAiBgB,MAAjB,CAAwB,UAAAV,CAAC;AAAA,eAAIA,CAAC,KAAKO,SAAV;AAAA,OAAzB,CAAf;;AACI,YAAKd,QAAL,CAAc;AACNC,QAAAA,KAAK,EAAEe;AADD,OAAd;;AAGI,YAAKL,UAAL;;AACR,UAAG,MAAKN,KAAL,CAAWJ,KAAX,CAAiBiB,OAAjB,CAAyBJ,SAAzB,IAAsC,CAAC,CAA1C,EAA4C;AACxC,cAAKd,QAAL,CAAc;AACVmB,UAAAA,KAAK,EAAE,MAAKd,KAAL,CAAWc,KAAX,GAAiB;AADd,SAAd;AAGH;AACJ,KA1DY;;AAAA,UAiEXC,gBAjEW,GAiEQ,YAAM;AACvB,YAAKC,QAAL,GAAgBC,WAAW,CACvB,YAAM;AACJ,YAAG,MAAKjB,KAAL,CAAWkB,KAAX,GAAmB,CAAtB,EAAyB;AACvB,gBAAKvB,QAAL,CAAc,UAAAwB,SAAS;AAAA,mBAAK;AAC1BD,cAAAA,KAAK,EAAEC,SAAS,CAACD,KAAV,GAAkB;AADC,aAAL;AAAA,WAAvB;AAGD,SAJD,MAIO;AACLE,UAAAA,aAAa,CAAC,MAAKJ,QAAN,CAAb;AACAK,UAAAA,KAAK,CAAC,cAAc,8EAAd,GAA+F,QAA/F,GAA0G,MAAKrB,KAAL,CAAWc,KAAtH,CAAL;AACD;AACF,OAVsB,EAWvB,IAXuB,CAA3B;AAaD,KA/EU;;AAET,UAAKX,KAAL,GAAapB,KAAK,CAACuC,SAAN,EAAb;AACA,UAAKtB,KAAL,GAAa;AACTJ,MAAAA,KAAK,EAAC,EADG;AAETO,MAAAA,KAAK,EAAE,EAFE;AAGTW,MAAAA,KAAK,EAAC,CAHG;AAITI,MAAAA,KAAK,EAAE;AAJE,KAAb;AAMA9B,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAKW,KAAL,CAAWJ,KAAvB;AATS;AAUZ;;;;AAID;wCACmB;AACf,WAAKT,UAAL;AACH;;;wCA0CoB;AACjB,WAAKQ,QAAL,CAAc;AACZuB,QAAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWkB;AADN,OAAd;AAGA,WAAKH,gBAAL;AACD;;;2CAgBuB;AACtBK,MAAAA,aAAa,CAAC,KAAKJ,QAAN,CAAb;AACD;;;6BACM;AAAA;AAAA;;AACL7B,MAAAA,UAAU;AACd,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKa,KAAL,CAAWJ,KAAX,CAAiB2B,GAAjB,CAAqB,UAAAC,IAAI,EAAG;AACzB,eAAO;AAAI,UAAA,SAAS,EAAIA,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACMA,IADN,CAAP;AAGH,OAJA,CADH,EAME;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACW,KAAKxB,KAAL,CAAWc,KADtB,CANF,EASE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACW,KAAKd,KAAL,CAAWkB,KADtB,CATF,EAYE;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAyB,QAAA,QAAQ,EAAE,kBAACO,KAAD;AAAA,iBAAS,MAAI,CAAClB,SAAL,CAAekB,KAAf,CAAT;AAAA,SAAnC;AAAmE,QAAA,QAAQ,EAAE,KAAKxB,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAG,SAAnB;AAA6B,QAAA,IAAI,EAAE;AAAnC,uDAAgD,MAAhD,gDAA4D,KAAKE,KAAjE,kDAA+E,KAAKH,KAAL,CAAWG,KAA1F;AAAA;AAAA;AAAA,uFADJ,CAZF,EAeE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAfF,EAkBE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBF,CADF;AAuBD;;;;EA7G+BnB,S;;SAAbE,I","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport '../Styles/Page.scss';\nexport default class Page extends Component {\n    constructor(){\n        super();\n        this.input = React.createRef();\n        this.state = { \n            words:[],\n            input: '',\n            score:0,\n            count: 1000000000000000000000,\n        }\n        console.log(this.state.words)\n    };\n    \n\n\n    //fetch call\n    componentDidMount(){\n        this.fetchWords();\n    }\n\n    fetchWords = () => {\n        console.log('fetched');\n\n        fetch(\"http://localhost:8080/page\")\n        .then(response => response.json())\n        .then(data =>{\n            this.setState({\n                words: data\n            });\n        })\n        .catch(err => {\n            console.error(err);\n        })\n        console.log(this.state.words)\n    };\n\n    handleChange = (e) =>{\n        this.setState({\n            input:e.target.value\n        })\n    };\n    clearInput= () => {\n        this.setState({\n            input:''\n        })\n    };\n    handlekey = (e) => {\n        e.preventDefault()\n        let inputWord = this.input.current.value;\n        let newArray = this.state.words.filter(e => e !== inputWord);\n            this.setState({\n                    words: newArray, \n                }) \n                this.clearInput();\n        if(this.state.words.indexOf(inputWord) > -1){\n            this.setState({\n                score: this.state.score+1,\n            })\n        }       \n    };\n    componentDidMount () {\n        this.setState({\n          count: this.state.count\n        })\n        this.doIntervalChange()\n      }\n      doIntervalChange = () => {\n        this.interval = setInterval(\n            () => {\n              if(this.state.count > 0) {\n                this.setState(prevState => ({\n                  count: prevState.count - 1\n                }))\n              } else {\n                clearInterval(this.interval)\n                alert('GAME OVER' + '                                                                            ' + 'SCORE:' + this.state.score)\n              }\n            },\n            1000\n          )\n      }\n      componentWillUnmount () {\n        clearInterval(this.interval)\n      };\n    render() { \n        fetchWords();\n    return (\n      <div className='container'>\n        {this.state.words.map(item =>{\n            return <h1 className = {item}>\n                        {item}\n                    </h1>\n        })}\n        <div className='score'>\n            Score:{this.state.score}\n        </div>\n        <div className='timer'>\n            Timer:{this.state.count}\n        </div>\n        <form className='search' onSubmit={(event)=>this.handlekey(event)} onChange={this.handleChange}>\n            <input className = 'textBar' type =\"reset\" type='text' ref={this.input} value={this.state.input} />\n        </form>\n        <Link to={'/start'}>\n            <button className='retry'>Try again</button>\n        </Link>\n        <div className='back'>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}